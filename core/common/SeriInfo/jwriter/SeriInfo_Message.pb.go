// Code generated by protoc-gen-go. DO NOT EDIT.
// source: main.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	main.proto

It has these top-level messages:
	SeriInfo
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SeriInfo struct {
	SeriesName              *string                       `protobuf:"bytes,1,opt,name=SeriesName" json:"SeriesName,omitempty"`
	CountryName             *string                       `protobuf:"bytes,2,opt,name=CountryName" json:"CountryName,omitempty"`
	CarLevelId              *int32                        `protobuf:"varint,3,opt,name=CarLevelId" json:"CarLevelId,omitempty"`
	BrandId                 *int32                        `protobuf:"varint,4,opt,name=BrandId" json:"BrandId,omitempty"`
	BrandName               *string                       `protobuf:"bytes,5,opt,name=BrandName" json:"BrandName,omitempty"`
	SeriesIsImport          *string                       `protobuf:"bytes,6,opt,name=SeriesIsImport" json:"SeriesIsImport,omitempty"`
	PriceId                 *int32                        `protobuf:"varint,7,opt,name=PriceId" json:"PriceId,omitempty"`
	CountryId               *int32                        `protobuf:"varint,8,opt,name=CountryId" json:"CountryId,omitempty"`
	Price                   *float32                      `protobuf:"fixed32,9,opt,name=Price" json:"Price,omitempty"`
	CarLevelName            *string                       `protobuf:"bytes,10,opt,name=CarLevelName" json:"CarLevelName,omitempty"`
	CompetingSeriList       []*SeriInfo_CompetingSeriInfo `protobuf:"bytes,11,rep,name=CompetingSeriList" json:"CompetingSeriList,omitempty"`
	SectName                *string                       `protobuf:"bytes,12,opt,name=SectName" json:"SectName,omitempty"`
	MinPrice                *float32                      `protobuf:"fixed32,13,opt,name=MinPrice" json:"MinPrice,omitempty"`
	SeriesState             *int32                        `protobuf:"varint,14,opt,name=SeriesState" json:"SeriesState,omitempty"`
	SeriesIsPublic          *string                       `protobuf:"bytes,15,opt,name=SeriesIsPublic" json:"SeriesIsPublic,omitempty"`
	FactoryId               *int32                        `protobuf:"varint,16,opt,name=FactoryId" json:"FactoryId,omitempty"`
	SectId                  *int32                        `protobuf:"varint,17,opt,name=SectId" json:"SectId,omitempty"`
	MaxPrice                *float32                      `protobuf:"fixed32,18,opt,name=MaxPrice" json:"MaxPrice,omitempty"`
	FactoryName             *string                       `protobuf:"bytes,19,opt,name=FactoryName" json:"FactoryName,omitempty"`
	SeriesPlace             *string                       `protobuf:"bytes,20,opt,name=SeriesPlace" json:"SeriesPlace,omitempty"`
	DealerCompetingSeriList []*SeriInfo_CompetingSeriInfo `protobuf:"bytes,21,rep,name=DealerCompetingSeriList" json:"DealerCompetingSeriList,omitempty"`
	XXX_unrecognized        []byte                        `json:"-"`
}

func (m *SeriInfo) Reset()                    { *m = SeriInfo{} }
func (m *SeriInfo) String() string            { return proto.CompactTextString(m) }
func (*SeriInfo) ProtoMessage()               {}
func (*SeriInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SeriInfo) GetSeriesName() string {
	if m != nil && m.SeriesName != nil {
		return *m.SeriesName
	}
	return ""
}

func (m *SeriInfo) GetCountryName() string {
	if m != nil && m.CountryName != nil {
		return *m.CountryName
	}
	return ""
}

func (m *SeriInfo) GetCarLevelId() int32 {
	if m != nil && m.CarLevelId != nil {
		return *m.CarLevelId
	}
	return 0
}

func (m *SeriInfo) GetBrandId() int32 {
	if m != nil && m.BrandId != nil {
		return *m.BrandId
	}
	return 0
}

func (m *SeriInfo) GetBrandName() string {
	if m != nil && m.BrandName != nil {
		return *m.BrandName
	}
	return ""
}

func (m *SeriInfo) GetSeriesIsImport() string {
	if m != nil && m.SeriesIsImport != nil {
		return *m.SeriesIsImport
	}
	return ""
}

func (m *SeriInfo) GetPriceId() int32 {
	if m != nil && m.PriceId != nil {
		return *m.PriceId
	}
	return 0
}

func (m *SeriInfo) GetCountryId() int32 {
	if m != nil && m.CountryId != nil {
		return *m.CountryId
	}
	return 0
}

func (m *SeriInfo) GetPrice() float32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *SeriInfo) GetCarLevelName() string {
	if m != nil && m.CarLevelName != nil {
		return *m.CarLevelName
	}
	return ""
}

func (m *SeriInfo) GetCompetingSeriList() []*SeriInfo_CompetingSeriInfo {
	if m != nil {
		return m.CompetingSeriList
	}
	return nil
}

func (m *SeriInfo) GetSectName() string {
	if m != nil && m.SectName != nil {
		return *m.SectName
	}
	return ""
}

func (m *SeriInfo) GetMinPrice() float32 {
	if m != nil && m.MinPrice != nil {
		return *m.MinPrice
	}
	return 0
}

func (m *SeriInfo) GetSeriesState() int32 {
	if m != nil && m.SeriesState != nil {
		return *m.SeriesState
	}
	return 0
}

func (m *SeriInfo) GetSeriesIsPublic() string {
	if m != nil && m.SeriesIsPublic != nil {
		return *m.SeriesIsPublic
	}
	return ""
}

func (m *SeriInfo) GetFactoryId() int32 {
	if m != nil && m.FactoryId != nil {
		return *m.FactoryId
	}
	return 0
}

func (m *SeriInfo) GetSectId() int32 {
	if m != nil && m.SectId != nil {
		return *m.SectId
	}
	return 0
}

func (m *SeriInfo) GetMaxPrice() float32 {
	if m != nil && m.MaxPrice != nil {
		return *m.MaxPrice
	}
	return 0
}

func (m *SeriInfo) GetFactoryName() string {
	if m != nil && m.FactoryName != nil {
		return *m.FactoryName
	}
	return ""
}

func (m *SeriInfo) GetSeriesPlace() string {
	if m != nil && m.SeriesPlace != nil {
		return *m.SeriesPlace
	}
	return ""
}

func (m *SeriInfo) GetDealerCompetingSeriList() []*SeriInfo_CompetingSeriInfo {
	if m != nil {
		return m.DealerCompetingSeriList
	}
	return nil
}

type SeriInfo_CompetingSeriInfo struct {
	SeriId           *int32   `protobuf:"varint,1,opt,name=SeriId" json:"SeriId,omitempty"`
	Score            *float32 `protobuf:"fixed32,2,opt,name=Score" json:"Score,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SeriInfo_CompetingSeriInfo) Reset()                    { *m = SeriInfo_CompetingSeriInfo{} }
func (m *SeriInfo_CompetingSeriInfo) String() string            { return proto.CompactTextString(m) }
func (*SeriInfo_CompetingSeriInfo) ProtoMessage()               {}
func (*SeriInfo_CompetingSeriInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *SeriInfo_CompetingSeriInfo) GetSeriId() int32 {
	if m != nil && m.SeriId != nil {
		return *m.SeriId
	}
	return 0
}

func (m *SeriInfo_CompetingSeriInfo) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func init() {
	proto.RegisterType((*SeriInfo)(nil), "SeriInfo")
	proto.RegisterType((*SeriInfo_CompetingSeriInfo)(nil), "SeriInfo.CompetingSeriInfo")
}

func init() { proto.RegisterFile("main.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 341 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x91, 0xcd, 0x6a, 0xeb, 0x30,
	0x10, 0x85, 0x71, 0xfe, 0x3d, 0xce, 0x9f, 0x95, 0xdc, 0x5c, 0x71, 0xef, 0xc6, 0x74, 0xe5, 0x55,
	0x16, 0x59, 0x74, 0xd5, 0x55, 0x53, 0x0a, 0x82, 0xa4, 0x04, 0xf2, 0x00, 0x45, 0xb5, 0xd4, 0x20,
	0x70, 0xac, 0x20, 0x2b, 0xa5, 0x7d, 0xa1, 0x3e, 0x67, 0xf1, 0x71, 0x0c, 0xfd, 0x59, 0x74, 0x67,
	0x1f, 0xcd, 0xcc, 0x77, 0xce, 0x0c, 0x2d, 0xf6, 0xda, 0x19, 0x51, 0x3c, 0xdb, 0xc7, 0xad, 0x2e,
	0x4b, 0x79, 0xd0, 0xcb, 0x93, 0xb3, 0xde, 0x5e, 0xbd, 0x77, 0x68, 0xd0, 0x3c, 0x31, 0x46, 0x54,
	0x7d, 0xeb, 0xf2, 0x41, 0x1e, 0x35, 0x0f, 0x92, 0x20, 0x0d, 0xd9, 0x8c, 0xa2, 0xb5, 0x3d, 0x17,
	0xde, 0xbd, 0x41, 0x6c, 0x41, 0x64, 0x44, 0x6b, 0xe9, 0x36, 0xfa, 0x45, 0xe7, 0x42, 0xf1, 0x76,
	0x12, 0xa4, 0x5d, 0x36, 0xa1, 0xfe, 0xad, 0x93, 0x85, 0x12, 0x8a, 0x77, 0x20, 0xc4, 0x14, 0x42,
	0x40, 0x5f, 0x17, 0x7d, 0x0b, 0x1a, 0xd7, 0x00, 0x51, 0x8a, 0xe3, 0xc9, 0x3a, 0xcf, 0x7b, 0xd0,
	0x27, 0xd4, 0xdf, 0x39, 0x93, 0x69, 0xa1, 0x78, 0xbf, 0xe9, 0xbd, 0x50, 0x85, 0xe2, 0x03, 0x48,
	0x23, 0xea, 0xa2, 0x86, 0x87, 0x49, 0x90, 0xb6, 0xd8, 0x9c, 0x86, 0x8d, 0x05, 0x00, 0x08, 0x83,
	0xae, 0x29, 0x5e, 0xdb, 0xe3, 0x49, 0x7b, 0x53, 0x1c, 0x2a, 0xd2, 0xc6, 0x94, 0x9e, 0x47, 0x49,
	0x3b, 0x8d, 0x56, 0xff, 0x97, 0x4d, 0xce, 0xe5, 0x97, 0x12, 0x24, 0x9f, 0x56, 0x5b, 0xc8, 0x3c,
	0x26, 0x0d, 0x31, 0x69, 0x4a, 0x83, 0xad, 0x29, 0x6a, 0xe2, 0x08, 0xc4, 0x19, 0x45, 0xb5, 0xf9,
	0xbd, 0x97, 0x5e, 0xf3, 0x31, 0x5c, 0x7d, 0x4a, 0xb4, 0x3b, 0x3f, 0xe5, 0x26, 0xe3, 0x13, 0xb4,
	0xc7, 0x14, 0xde, 0xcb, 0xcc, 0x5b, 0x04, 0x98, 0xa2, 0x74, 0x4c, 0xbd, 0x8a, 0x21, 0x14, 0x8f,
	0xf1, 0x5f, 0x11, 0xe4, 0x6b, 0x4d, 0x60, 0x0d, 0xe1, 0xd2, 0x04, 0x23, 0xb3, 0xe6, 0x00, 0x35,
	0x61, 0x97, 0xcb, 0x4c, 0xf3, 0x39, 0xc4, 0x1b, 0xfa, 0x7b, 0xa7, 0x65, 0xae, 0xdd, 0xcf, 0xb4,
	0x7f, 0x7e, 0x4d, 0xfb, 0x6f, 0xf5, 0x6d, 0x4b, 0x58, 0x01, 0xec, 0x39, 0x23, 0x14, 0x0e, 0x8f,
	0x7d, 0xef, 0x33, 0xeb, 0xea, 0x93, 0xb7, 0x3e, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb0, 0x86, 0xf6,
	0x99, 0x41, 0x02, 0x00, 0x00,
}
